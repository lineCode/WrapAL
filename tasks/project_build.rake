load "#{PROJECT_ROOT}/tasks/project_command.rake"
#==============================================================================
# 鈻?Project 妯″潡
#------------------------------------------------------------------------------
# 銆€链琑ake椤圭洰榛樿妯″潡, 绠椾綔锻藉悕绌洪棿
#==============================================================================
module Project
  #============================================================================
  # 鈻?Project Self
  #============================================================================
  class << self
    #--------------------------------------------------------------------------
    # 鈼?銮峰彇鐩爣
    #--------------------------------------------------------------------------
    def targets
      @targets ||= {}
    end
    #--------------------------------------------------------------------------
    # 鈼?璁剧疆鐩爣
    #--------------------------------------------------------------------------
    def target(key, &block)
      @targets[key].instance_eval(&block) if(@targets[key])
    end
    #--------------------------------------------------------------------------
    # 鈼?阆嶅巻鐩爣
    #--------------------------------------------------------------------------
    def each_target(&block)
      @targets.each do |key, target|
        target.instance_eval(&block)
      end
    end
	end
  #============================================================================
  # 鈻?宸ュ叿阈?
  #============================================================================
  class Toolchain
    #==========================================================================
    # 鈻?Toolchain Self 銮峰彇褰揿墠
    #==========================================================================
    class << self
      attr_accessor :toolchains
    end
    #--------------------------------------------------------------------------
    # 鈼?鍒濆鍖?
    #--------------------------------------------------------------------------
    def initialize(name, &block)
      @name, @initializer = name.to_s, block
      Project::Toolchain.toolchains ||= {}
      Project::Toolchain.toolchains[@name] = self
    end
    #--------------------------------------------------------------------------
    # 鈼?璁剧疆
    #--------------------------------------------------------------------------
    def setup(conf)
      conf.instance_eval(&@initializer)
    end
    #--------------------------------------------------------------------------
    # 鈼?杞藉叆
    #--------------------------------------------------------------------------
    def self.load
      Dir.glob("#{PROJECT_ROOT}/tasks/toolchains/*.rake").each do |file|
        Kernel.load file
      end
    end
  end
  # 杞藉叆宸ュ叿阈?
  Toolchain.load
  #============================================================================
  # 鈻?鏋勫缓绫?
  #============================================================================
  class Build
    #==========================================================================
    # 鈻?Build Self 銮峰彇褰揿墠
    #==========================================================================
    class << self
      attr_accessor :current
    end
    #--------------------------------------------------------------------------
    # 鈼?瀹氢箟瀹炰緥鍙橀噺
    #--------------------------------------------------------------------------
    include             Rake::DSL
    attr_accessor       :name, :build_dir, :outname, :object_extx
    attr_reader         :toolchains
    #--------------------------------------------------------------------------
    # 鈼?璁剧疆锻戒护
    #--------------------------------------------------------------------------
    COMMANDS = %w(cxx cc rc linker archiver)
    attr_block Project::Build::COMMANDS
    #--------------------------------------------------------------------------
    # 鈼?鍒濆鍖?
    #--------------------------------------------------------------------------
    def initialize(name, build_dir=nil, &block)
      @outname = @name = name
      @object_extx = ".o"
      # 涓嶅瓨鍦ㄦ儏鍐典笅鏋勯€?
      unless Project.targets[@name]
        @build_dir = build_dir || ENV['BUILD_DIR'] || "#{PROJECT_ROOT}/build"
        @cxx = Compiler.new(self, %w(.cc .cxx .cpp))
        @cc = Compiler.new(self, %w(.c))
        @linker = Linker.new(self)
        @rc = ResourceCompiler.new(self, %w(.rc))
        @archiver = Archiver.new(self)
        @toolchains = []
        Project.targets[@name] = self
      end
      # 浣跨敤宸茬粡瀛桦湪镄勯」鐩?
      Project::Build.current = Project.targets[@name]
      Project.targets[@name].instance_eval(&block)
    end
    #--------------------------------------------------------------------------
    # 鈼?璁剧疆宸ュ叿阈?
    #--------------------------------------------------------------------------
    def toolchain(name)
      tc = Toolchain.toolchains[name.to_s]
      fail "Unknown #{name} toolchain" unless tc
      tc.setup(self)
      @toolchains.unshift name.to_s
    end
    #--------------------------------------------------------------------------
    # 鈼?鐢熸垚鏂囦欢鍚?
    #--------------------------------------------------------------------------
    def filename(name)
      if name.is_a?(Array)
        name.flatten.map { |n| filename(n) }
      else
        '"%s"' % name
      end
    end
    #--------------------------------------------------------------------------
    # 鈼?obj 鏂囦欢鍚岖О
    #--------------------------------------------------------------------------
    def objfile(name)
      if name.is_a?(Array)
        name.flatten.map { |n| objfile(n) }
      else
        "#{name}#{object_extx}"
      end
    end
  end
end
